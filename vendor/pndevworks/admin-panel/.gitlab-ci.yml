stages:
  - test
  - build
  - deploy
  - publish

.run-on-protected-context:
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'

.dont-run-on-skip-release:
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /\\[skip-release\\]/"
      when: never

# This file is a template, and might need editing before it works on your project.
# Publishes a tag/branch to Composer Packages of the current project
Registry Publish:
  image: curlimages/curl:latest
  stage: publish
  dependencies:
    - "Unit Test"
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    # Output state information
    - if [ $code -eq 201 ]; then
      echo "Package created - Code $code - $body";
      else
      echo "Could not create package - Code $code - $body";
      exit 1;
      fi

Unit Test:
  image: gl.dnartworks.co.id:5050/pndevworks/templates/php-for-unit-testing:${PHPVER}
  coverage: /^\s*Lines:\s*\d+.\d+\%/
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - !reference [.run-on-protected-context, rules]
  variables:
    XDEBUG_MODE: coverage
  before_script:
    - composer config --global http-basic.gl.dnartworks.co.id $PND_CI_DEPS_USER $CI_DEPS_TOKEN
  script:
    - echo GE_JOB_ID=$CI_JOB_ID >> package_publish_info.env
    - composer install
    - composer run test -- --colors=never
    - echo "Coverage report can be checked ${CI_SERVER_URL}/${CI_PROJECT_PATH}/-/jobs/${CI_JOB_ID}/artifacts/file/build/logs/html/index.html"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/logs/coverage.cobertura.xml
      junit: build/logs/report.xml
      dotenv: package_publish_info.env
    paths:
      - "build/"
  parallel:
    matrix: 
      - PHPVER: [7, 8]

Publisher:
  image: registry.gitlab.com/chez14/publisher:v1.0.1
  stage: deploy
  needs:
    - "Unit Test"
  rules:
    - !reference [.dont-run-on-skip-release, rules]
    - !reference [.run-on-protected-context, rules]
  script:
    - setup-git.sh
    - gitlab-unshallow.sh
    - version=$(autotag --scheme=conventional)
    - echo VERSION=$version >> taginfo.env
    - git push --tag
  artifacts:
    reports:
      dotenv: taginfo.env

Declare Release:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - !reference [.dont-run-on-skip-release, rules]
    - !reference [.run-on-protected-context, rules]
  needs:
    - job: Publisher
      artifacts: true
    - job: "Unit Test"
      artifacts: true
  script:
    - echo "Running the release job."
  release:
    name: "Release v$VERSION"
    description: "Admin Panel release v${VERSION}."
    tag_name: "v${VERSION}"
    ref: "v${VERSION}"
    assets:
      links:
        - name: "Coverage Report"
          url: "${CI_SERVER_URL}/${CI_PROJECT_PATH}/-/jobs/${GE_JOB_ID}/artifacts/file/build/logs/html/index.html"
